{"ast":null,"code":"var _jsxFileName = \"F:\\\\projects\\\\Projects\\\\project\\\\frontend\\\\src\\\\pages\\\\saved.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Post from \"./post\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Saved() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [user, setUser] = useState({});\n  var userid = localStorage.getItem(\"id\");\n  function getUser() {\n    axios.get(`/api/users/${userid}`).then(response => {\n      setUser(response.data);\n      getPosts(response.data.postsSaved);\n    });\n  }\n  useEffect(getUser, []);\n  // useEffect(() => getPosts(user.postsSaved), [user])\n  function getPosts(x) {\n    for (var i = 0; i < x.length; i++) {\n      axios.get(`/api/posts/${parseInt(x[i])}`).then(response => setPosts(prev => [...prev, response.data]));\n    }\n  }\n  var stat;\n  if (posts == [] || posts == false) {\n    stat = true;\n  } else {\n    stat = false;\n  }\n  const elements = posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n    likes: post.likes,\n    profile: post.profile,\n    publicationDate: post.publicationDate,\n    pb: post.publicationShortDate,\n    pk: post.pk,\n    title: post.title,\n    authorpk: post.author,\n    text: post.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 40\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: stat ? elements : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"you have no saved articles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 32\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Saved, \"+9HQuF0HeH/b/Q7EjRt94cdovqM=\");\n_c = Saved;\nvar _c;\n$RefreshReg$(_c, \"Saved\");","map":{"version":3,"names":["useState","useEffect","Post","axios","Saved","posts","setPosts","user","setUser","userid","localStorage","getItem","getUser","get","then","response","data","getPosts","postsSaved","x","i","length","parseInt","prev","stat","elements","map","post","likes","profile","publicationDate","publicationShortDate","pk","title","author","text"],"sources":["F:/projects/Projects/project/frontend/src/pages/saved.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\r\nimport Post from \"./post\"\r\nimport axios from \"axios\"\r\nexport default function Saved() {\r\n    const [posts, setPosts] = useState([])\r\n    const [user, setUser] = useState({})\r\n    var userid = localStorage.getItem(\"id\")\r\n    function getUser() {\r\n        axios.get(`/api/users/${userid}`).then(response => {\r\n            setUser(response.data)\r\n            getPosts(response.data.postsSaved)\r\n        }\r\n        )\r\n    }\r\n    useEffect(getUser, [])\r\n    // useEffect(() => getPosts(user.postsSaved), [user])\r\n    function getPosts(x) {\r\n        for (var i = 0; i < x.length; i++) {\r\n            axios.get(`/api/posts/${parseInt(x[i])}`).then((response) => setPosts(prev => [...prev, response.data])\r\n            )\r\n        }\r\n    }\r\n    var stat\r\n    if(posts == [] || posts == false){\r\n        stat = true\r\n    }\r\n    else{\r\n        stat= false\r\n    }\r\n    const elements = posts.map(post => <Post likes={post.likes} profile={post.profile} publicationDate={post.publicationDate} pb={post.publicationShortDate} pk={post.pk} title={post.title} authorpk={post.author} text={post.text} />)\r\n\r\n    return (\r\n\r\n        <main>\r\n            {stat ? elements : <p>you have no saved articles</p>}\r\n        </main>\r\n    )\r\n\r\n\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,KAAK,MAAM,OAAO;AAAA;AACzB,eAAe,SAASC,KAAK,GAAG;EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,IAAIS,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,IAAI,CAAC;EACvC,SAASC,OAAO,GAAG;IACfT,KAAK,CAACU,GAAG,CAAE,cAAaJ,MAAO,EAAC,CAAC,CAACK,IAAI,CAACC,QAAQ,IAAI;MAC/CP,OAAO,CAACO,QAAQ,CAACC,IAAI,CAAC;MACtBC,QAAQ,CAACF,QAAQ,CAACC,IAAI,CAACE,UAAU,CAAC;IACtC,CAAC,CACA;EACL;EACAjB,SAAS,CAACW,OAAO,EAAE,EAAE,CAAC;EACtB;EACA,SAASK,QAAQ,CAACE,CAAC,EAAE;IACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,CAAC,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;MAC/BjB,KAAK,CAACU,GAAG,CAAE,cAAaS,QAAQ,CAACH,CAAC,CAACC,CAAC,CAAC,CAAE,EAAC,CAAC,CAACN,IAAI,CAAEC,QAAQ,IAAKT,QAAQ,CAACiB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAER,QAAQ,CAACC,IAAI,CAAC,CAAC,CACtG;IACL;EACJ;EACA,IAAIQ,IAAI;EACR,IAAGnB,KAAK,IAAI,EAAE,IAAIA,KAAK,IAAI,KAAK,EAAC;IAC7BmB,IAAI,GAAG,IAAI;EACf,CAAC,MACG;IACAA,IAAI,GAAE,KAAK;EACf;EACA,MAAMC,QAAQ,GAAGpB,KAAK,CAACqB,GAAG,CAACC,IAAI,iBAAI,QAAC,IAAI;IAAC,KAAK,EAAEA,IAAI,CAACC,KAAM;IAAC,OAAO,EAAED,IAAI,CAACE,OAAQ;IAAC,eAAe,EAAEF,IAAI,CAACG,eAAgB;IAAC,EAAE,EAAEH,IAAI,CAACI,oBAAqB;IAAC,EAAE,EAAEJ,IAAI,CAACK,EAAG;IAAC,KAAK,EAAEL,IAAI,CAACM,KAAM;IAAC,QAAQ,EAAEN,IAAI,CAACO,MAAO;IAAC,IAAI,EAAEP,IAAI,CAACQ;EAAK;IAAA;IAAA;IAAA;EAAA,QAAG,CAAC;EAEpO,oBAEI;IAAA,UACKX,IAAI,GAAGC,QAAQ,gBAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAiC;IAAA;IAAA;IAAA;EAAA,QACjD;AAIf;AAAC,GApCuBrB,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}